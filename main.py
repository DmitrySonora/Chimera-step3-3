import asyncio
import logging
import signal
import sys
from telegram_bot import telegram_bot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –û—Ç–∫–ª—é—á–∏—Ç—å –ª–∏—à–Ω—é—é –±–æ–ª—Ç–æ–≤–Ω—é –æ—Ç httpx
logging.getLogger("httpx").setLevel(logging.WARNING)


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã"""
    logger.info("üê≤ –•–∏–º–µ—Ä–∞ –í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–µ–π—à–∞—è —É–∂–µ –∑–¥–µ—Å—å üê≤")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        await telegram_bot.run()
        
        # –î–µ—Ä–∂–∏–º –±–æ—Ç–∞ —Ä–∞–±–æ—Ç–∞—é—â–∏–º
        while telegram_bot.is_running:
            await asyncio.sleep(1)
            
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        await telegram_bot.shutdown()
        logger.info("üê≤ –•–∏–º–µ—Ä–∞ –í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–µ–π—à–∞—è –ø–æ–∫–∏–Ω—É–ª–∞ –≤–∞—Å üê≤")


def signal_handler(sig, frame):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
    logger.info("üê≤ –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")
    asyncio.create_task(telegram_bot.shutdown())
    sys.exit(0)


if __name__ == "__main__":
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π main
    asyncio.run(main())